---
import Accordion from "../../components/Accordion.astro"
import AccordionItem from "../../components/AccordionItem.astro"
import SiteLayout from "../../layouts/SiteLayout.astro"
import type { MarkdownPost } from "../../types"

const categorizeLessons = () => {
  const markdownFiles = import.meta.glob<MarkdownPost>("./files/*.md", { eager: true })

  // Get all lessons
  const lessons = Object.entries(markdownFiles).map(([path, lesson]) => ({
    path,
    data: lesson.frontmatter
  }))

  // Group lessons by topic
  const groupedLessons = lessons.reduce((acc, lesson) => {
    const {topic, title, slug } = lesson.data

    if (!acc[topic]) {
      acc[topic] = []
    }

    acc[topic].push({ title, path: lesson.path, slug })
    return acc;
    }, {} as Record<string, Array<{ title: string; path: string, slug: string }>>)

  return groupedLessons
}
---

<SiteLayout title="Clases">
  <div class="container">
    <h1 class="display-4">Listado de clases</h1>
    <hr />
    <Accordion>
      {/* List lessons by topic */}
      {
        Object.entries(categorizeLessons()).map(([topic, lessons]) => (
          <AccordionItem title={topic}>
            <ul class="list-group list-group-flush">
              {lessons.map((lesson) => (
                <li class="list-group-item lead fw-semibold">
                  <a href={`./lessons/lesson?slug=${lesson.slug}`}>
                    {lesson.title}
                  </a>
                </li>
              ))}
            </ul>
          </AccordionItem>
        ))
      }
    </Accordion>
  </div>
</SiteLayout>