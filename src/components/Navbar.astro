---
const { pathname } = Astro.url;

const items = [
  { name: "Inicio", path: "/"},
  { name: "Clases", path: "/lessons"},
  { name: "Tareas", path: "/tasks"},
  { name: "Recursos", path: "/resources"}
]

const getLinkAttributes = (path) => {
  const isActive = (path === "/" && pathname === "/") || (path !== "/" && pathname.startsWith(path));
  
  return {
    class: `nav-link ${isActive ? "active" : ""}`,
    "aria-current": (isActive ? "page" : undefined) as astroHTML.JSX.AriaAttributes["aria-current"]
  };
};
---

<nav class="navbar navbar-expand-lg navbar-dark bg-dark py-3">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">PDI-Blog</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasDarkNavbar" aria-controls="offcanvasDarkNavbar" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasDarkNavbar" aria-labelledby="offcanvasDarkNavbarLabel">
      <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasDarkNavbarLabel">Menu</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
      </div>
      <div class="offcanvas-body">
        <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
          {items.map(({ name, path }) => (
            <li class="nav-item">
              <a {...getLinkAttributes(path)} href={path}>{name}</a>
            </li>
          ))}
        </ul>
        <div class="d-lg-none">
          <hr />
          <p>Hecho con ❤️ por los profes de <a href="https://github.com/PDI-EEST4">PDI-EEST4</a></p>
        </div>
      </div>
    </div>
  </div>
</nav>
